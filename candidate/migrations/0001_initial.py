# Generated by Django 5.2.1 on 2025-05-31 06:37

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Candidate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("phone", models.CharField(blank=True, max_length=15, null=True)),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Male", "Male"),
                            ("Female", "Female"),
                            ("Non-binary", "Non-binary"),
                            ("Prefer not to say", "Prefer not to say"),
                        ],
                        max_length=100,
                        null=True,
                    ),
                ),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                (
                    "linkedin_profile",
                    models.URLField(
                        blank=True, help_text="Link to LinkedIn profile", null=True
                    ),
                ),
                (
                    "github_profile",
                    models.URLField(
                        blank=True, help_text="Link to GitHub profile", null=True
                    ),
                ),
                (
                    "portfolio_link",
                    models.URLField(
                        blank=True,
                        help_text="Link to personal portfolio/website",
                        null=True,
                    ),
                ),
                ("resume", models.FileField(upload_to="resumes/")),
                (
                    "skills",
                    models.TextField(
                        help_text="Comma-separated skills (e.g., Python, Django, AWS, SQL)"
                    ),
                ),
                (
                    "experience",
                    models.IntegerField(help_text="Total years of experience"),
                ),
                (
                    "current_job_title",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "current_company",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "desired_roles",
                    models.CharField(
                        blank=True,
                        help_text="Comma-separated desired job roles (e.g., Software Engineer, Product Manager)",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "preferred_industry_sector",
                    models.CharField(
                        blank=True,
                        help_text="Comma-separated preferred industries/sectors (e.g., IT, Healthcare, Finance)",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "employment_type_preferences",
                    models.CharField(
                        choices=[
                            ("full_time", "Full-time"),
                            ("part_time", "Part-time"),
                            ("contract", "Contract"),
                            ("freelance", "Freelance"),
                            ("internship", "Internship"),
                            ("remote", "Remote"),
                        ],
                        default="full_time",
                        max_length=50,
                    ),
                ),
                (
                    "preferred_locations",
                    models.CharField(
                        blank=True,
                        help_text="Comma-separated preferred job locations (e.g., Ahmedabad, Remote, Mumbai)",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "desired_salary_range",
                    models.CharField(
                        blank=True,
                        help_text="E.g., '10-15 LPA', 'Open to negotiation'",
                        max_length=100,
                        null=True,
                    ),
                ),
                ("willingness_to_relocate", models.BooleanField(default=False)),
                ("is_actively_looking", models.BooleanField(default=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("new", "New"),
                            ("under_review", "Under Review"),
                            ("shortlisted", "Shortlisted"),
                            ("interviewing", "Interviewing"),
                            ("rejected", "Rejected"),
                            ("hired", "Hired"),
                            ("withdrawn", "Withdrawn"),
                            ("on_hold", "On Hold"),
                        ],
                        default="new",
                        max_length=50,
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        blank=True,
                        help_text="How was this candidate acquired?",
                        max_length=100,
                        null=True,
                    ),
                ),
                ("view_count", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Candidate",
                "verbose_name_plural": "Candidates",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Certification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the certification (e.g., AWS Certified Solutions Architect)",
                        max_length=255,
                    ),
                ),
                (
                    "issuing_organization",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("issue_date", models.DateField(blank=True, null=True)),
                ("expiration_date", models.DateField(blank=True, null=True)),
                (
                    "credential_id",
                    models.CharField(
                        blank=True,
                        help_text="Credential ID or License Number",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "credential_url",
                    models.URLField(
                        blank=True,
                        help_text="Link to the certification verification page",
                        null=True,
                    ),
                ),
                (
                    "candidate",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="certifications",
                        to="candidate.candidate",
                    ),
                ),
            ],
            options={
                "ordering": ["-issue_date"],
            },
        ),
        migrations.CreateModel(
            name="Education",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("degree", models.CharField(max_length=255)),
                ("institution", models.CharField(max_length=255)),
                (
                    "field_of_study",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                (
                    "gpa",
                    models.CharField(
                        blank=True,
                        help_text="e.g., 3.8/4.0 or A+",
                        max_length=10,
                        null=True,
                    ),
                ),
                ("activities_achievements", models.TextField(blank=True, null=True)),
                (
                    "candidate",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="education_entries",
                        to="candidate.candidate",
                    ),
                ),
            ],
            options={
                "ordering": ["-end_date", "-start_date"],
            },
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField()),
                (
                    "tech_stack",
                    models.TextField(help_text="Comma-separated technologies used"),
                ),
                (
                    "role_in_project",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("github_link", models.URLField(blank=True, null=True)),
                ("live_link", models.URLField(blank=True, null=True)),
                (
                    "candidate",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="projects",
                        to="candidate.candidate",
                    ),
                ),
            ],
            options={
                "ordering": ["title"],
            },
        ),
        migrations.CreateModel(
            name="WorkExperience",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("company_name", models.CharField(max_length=255)),
                ("role_designation", models.CharField(max_length=255)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                ("is_current", models.BooleanField(default=False)),
                ("responsibilities", models.TextField(blank=True, null=True)),
                (
                    "technologies_used",
                    models.TextField(
                        blank=True,
                        help_text="Comma-separated technologies (e.g., Python, Django, AWS, SQL)",
                        null=True,
                    ),
                ),
                (
                    "candidate",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="work_experiences",
                        to="candidate.candidate",
                    ),
                ),
            ],
            options={
                "ordering": ["-end_date", "-start_date"],
            },
        ),
    ]
